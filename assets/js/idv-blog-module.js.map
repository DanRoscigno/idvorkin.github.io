{"mappings":"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","sources":["src/index.ts","src/main.ts","src/graph.ts"],"sourcesContent":["console.log(\"++ -blog-module:success!\");\nimport \"./main\";\nimport \"./graph\";\n\nconsole.log(\"-- -blog-module:success!\");\n","import {\n  createSemanticDiagnosticsBuilderProgram,\n  isRegularExpressionLiteral,\n  JSDocUnknownTag,\n} from \"../node_modules/typescript/lib/typescript\";\nimport { CreateSearch } from \"./search\";\n\nlet tocExpand = true;\n\nfunction checkExpandToggle() {\n  const toc = $(\".ui-toc-dropdown .toc\");\n  const toggle = $(\".expand-toggle\");\n  if (!tocExpand) {\n    toc.removeClass(\"expand\");\n    toggle.text(\"Expand all\");\n  } else {\n    toc.addClass(\"expand\");\n    toggle.text(\"Collapse all\");\n  }\n}\n\nfunction SwapProdAndTest() {\n  /* Find page title. */\n  const url = window.location.href;\n  const prodPrefix = \"https://idvork.in\";\n  const testPrefix = \"http://localhost:4000\";\n  const isProd = url.includes(prodPrefix);\n  let newURL = url;\n  if (isProd) {\n    newURL = url.replace(prodPrefix, testPrefix);\n  } else {\n    newURL = url.replace(testPrefix, prodPrefix);\n  }\n\n  window.location.href = newURL;\n}\n\nfunction ForceShowRightSideBar() {\n  let toc = $(\"#right-sidebar\");\n  let mainContent = $(\"#main-content\");\n  toc.removeClass();\n  toc.addClass(\"col-4 pl-0\");\n\n  mainContent.removeClass();\n  mainContent.addClass(\"col-8 pr-0\");\n\n  // Hide DropUp\n  const tocDropUp = $(\"#id-ui-toc-dropdown\");\n  tocDropUp.removeClass();\n  tocDropUp.addClass(\"d-none\");\n}\n\n// <!-- Copied from hackmd-extras.js -->\nfunction generateToc(id, showPinToc) {\n  const target = $(`#${id}`);\n  target.html(\"\");\n  /* eslint-disable no-unused-vars */\n  /* @ts-ignore:TS2339*/\n  const toc = new window.Toc(\"content-holder\", {\n    level: 3,\n    top: -1,\n    class: \"toc\",\n    ulClass: \"nav\",\n    targetId: id,\n  });\n  /* eslint-enable no-unused-vars */\n  if (target.text() === \"undefined\") {\n    target.html(\"\");\n  }\n  const tocMenu = $('<div class=\"toc-menu\"></div');\n  const toggle = $('<a class=\"expand-toggle\" href=\"#\">Collapse all</a>');\n  const backToTop = $('<a class=\"back-to-top\" href=\"#\">Top of page</a>');\n  const gotoBottom = $('<a class=\"go-to-bottom\" href=\"#\">Bottom of page</a>');\n  const forceSideBar = $('<a class=\"go-to-bottom\" href=\"#\">Pin ToC</a>');\n  checkExpandToggle();\n  toggle.click(e => {\n    e.preventDefault();\n    e.stopPropagation();\n    tocExpand = !tocExpand;\n    checkExpandToggle();\n  });\n  backToTop.click(e => {\n    e.preventDefault();\n    e.stopPropagation();\n    window.scrollTo(0, 0);\n  });\n  gotoBottom.click(e => {\n    e.preventDefault();\n    e.stopPropagation();\n    window.scrollTo(0, document.body.scrollHeight);\n  });\n  forceSideBar.click(e => ForceShowRightSideBar());\n  tocMenu\n    .append(toggle)\n    .append(backToTop)\n    .append(gotoBottom);\n  if (showPinToc) {\n    tocMenu.append(forceSideBar);\n  }\n  target.append(tocMenu);\n}\n\n// Yuk: Markdown Table Syntax makes nesting lists in tables hard. Adding JS based macro\n// Replacement\n//  NOTE: replace [](lX) with a list where X is a number\n//  List must start with *lX\n//  Markdown does not seperate lists, so stick divs between them.\n\nfunction JsTemplateReplace() {\n  // Build a cache of replacement candidates to avoid multiple iterations over the tables\n  let replaces = {};\n  for (var list of $(\"ul\")) {\n    if (!list.firstElementChild) continue;\n    let firstLIText = list.firstElementChild.textContent;\n    if (!firstLIText.startsWith(\"l\")) continue;\n    let number = parseInt(firstLIText.substring(1));\n    if (Number.isNaN(number)) continue;\n    replaces[firstLIText] = list;\n  }\n\n  for (var replaceText in replaces) {\n    let aToReplace = _($(`a[href=${replaceText}]`)).head();\n    if (!aToReplace) continue; // Non-replaced targets will be left in place\n    const replace = replaces[replaceText];\n    replace.removeChild(replace.firstElementChild); // remove the 'lookup id' from the list\n    $(aToReplace).replaceWith(replace);\n  }\n}\n\nfunction MakeBackLinkHTML(url_info: IURLInfo) {\n  const title_href = `<a href=${url_info.url}>${url_info.title}</a>`;\n  const class_link = `link-box description truncate-css`;\n  const output = `\n<div>\n    <div class=\"${class_link}\"> ${title_href}:<span class=\"link-description\"> ${url_info.description} <span></div>\n</div>`;\n  return output;\n}\n\nasync function AddLinksToPage(allUrls: IURLInfoMap) {\n  // TODO handle redirects\n  var my_path = new URL(document.URL).pathname;\n  const backlinks = allUrls[my_path]?.incoming_links;\n  const frontlinks = allUrls[my_path]?.outgoing_links;\n\n  if (!backlinks && !frontlinks) {\n    console.log(`No backlinks for the page ${my_path}`);\n    return;\n  }\n\n  let link_parent_location = $(\"#links-to-page\");\n  if (!link_parent_location) {\n    console.log(\"No back_link_location\");\n    return;\n  }\n\n  link_parent_location.append(\n    `\n<ul class=\"nav nav-tabs nav-fill\" id=\"myTab\" role=\"tablist\">\n  <li class=\"nav-item\" role=\"presentation\">\n    <button class=\"nav-link active\" id=\"home-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#incoming\" type=\"button\" role=\"tab\" aria-controls=\"incoming\" aria-selected=\"true\">Links to here</button>\n  </li>\n  <li class=\"nav-item\" role=\"presentation\">\n    <button class=\"nav-link\" id=\"profile-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#outgoing\" type=\"button\" role=\"tab\" aria-controls=\"outgoing\" aria-selected=\"false\">Link from here</button>\n  </li>\n</ul>\n<div class=\"tab-content\" id=\"myTabContent\">\n  <div class=\"tab-pane fade show active \" id=\"incoming\" role=\"tabpanel\" aria-labelledby=\"incoming-tab\"></div>\n  <div class=\"tab-pane fade\" id=\"outgoing\" role=\"tabpanel\" aria-labelledby=\"outgoing-tab\"></div>\n</div>\n`\n  );\n\n  let incoming_location = link_parent_location.find(\"#incoming\");\n  var sort_descending_by_size = (a, b) =>\n    Number(allUrls[b].doc_size) - Number(allUrls[a].doc_size);\n\n  if (backlinks) {\n    for (var link of backlinks.sort(sort_descending_by_size)) {\n      const url_info = allUrls[link];\n      incoming_location.append(MakeBackLinkHTML(url_info));\n    }\n  }\n\n  // remove front links not in\n  let clean_front_links = [];\n  for (var link of frontlinks) {\n    if (allUrls[link]) {\n      clean_front_links.push(link);\n    }\n  }\n\n  let outgoing_location = link_parent_location.find(\"#outgoing\");\n  if (clean_front_links) {\n    for (let link of clean_front_links.sort(sort_descending_by_size)) {\n      const url_info = allUrls[link];\n      outgoing_location.append(MakeBackLinkHTML(url_info));\n    }\n  }\n}\nfunction make_html_summary_link(link, url_info: IURLInfo) {\n  const attribution = `(From:<a href='${url_info.url}'> ${url_info.title}</a>)`;\n\n  return `<div>\n        <i> ${url_info.description}</i> ${attribution}\n    </div>`;\n}\n\nfunction make_html_summary_link_error(link, error) {\n  return `<span class='text-danger'>Error: Invalid link for ${link.attr(\n    \"href\"\n  )} ${error} </span>`;\n}\n\nfunction AddSummarysToPage(backLinks: IBacklinks) {\n  const summary_links = $.makeArray($(\".summary-link\"));\n  summary_links.forEach(raw_link => {\n    const link = $(raw_link);\n    try {\n      console.log(link.attr(\"href\"));\n\n      let ref = link.attr(\"href\");\n\n      // Resolve redirect\n      if (backLinks.redirects[ref] != undefined) {\n        ref = backLinks.redirects[ref];\n      }\n      // Look up in url info\n      if (backLinks.url_info[ref] == undefined) {\n        link.html(make_html_summary_link_error(link, \"not found in url info\"));\n        return;\n      }\n\n      link.html(make_html_summary_link(link, backLinks.url_info[ref]));\n    } catch (e) {\n      link.html(make_html_summary_link_error(link, e));\n    }\n  });\n}\n\nasync function add_link_loader() {\n  AddLinksToPage(await get_link_info());\n  AddSummarysToPage(await get_back_links());\n}\n\nexport interface IBacklinks {\n  redirects: { [key: string]: string };\n  url_info: IURLInfoMap;\n}\n\nexport interface IURLInfoMap {\n  [key: string]: IURLInfo;\n}\n\nexport interface IURLInfo {\n  url: string;\n  title: string;\n  description: string;\n  file_path: string;\n  outgoing_links: string[];\n  incoming_links: string[];\n  redirect_url: string;\n  doc_size: number;\n}\n\nlet cached_back_links: IBacklinks = null;\nasync function get_back_links(): Promise<IBacklinks> {\n  if (cached_back_links != null) {\n    return cached_back_links;\n  }\n  const url = window.location.href;\n  const prodPrefix = \"https://idvork.in\";\n  const isProd = url.includes(prodPrefix);\n\n  var backlinks_url = \"\";\n  if (isProd) {\n    backlinks_url =\n      \"https://raw.githubusercontent.com/idvorkin/idvorkin.github.io/master/back-links.json?flush_cache=True\";\n  } else {\n    backlinks_url = \"/back-links.json\";\n  }\n\n  const backlinksJson = (await ($.getJSON(backlinks_url) as any)) as IBacklinks;\n  cached_back_links = backlinksJson;\n  return cached_back_links;\n}\n\nasync function get_link_info(): Promise<IURLInfoMap> {\n  return (await get_back_links()).url_info;\n}\n\nfunction search() {\n  $(\"#autocomplete-search-box-button\").click();\n}\n\nfunction keyboard_shortcut_loader() {\n  const mouseTrap: any = Mousetrap();\n  mouseTrap.bind(\"/\", e => search());\n  mouseTrap.bind(\"s\", e => search());\n  mouseTrap.bind(\"t\", e => ForceShowRightSideBar());\n  mouseTrap.bind(\"p\", e => SwapProdAndTest());\n  mouseTrap.bind(\"a\", e => (location.href = \"/all\"));\n  mouseTrap.bind(\"m\", e => (location.href = \"/toc\"));\n  mouseTrap.bind(\"6\", e => (location.href = \"/ig66\"));\n\n  let shortcutHelp = `\nTry these shortcuts:\n  s - search\n  / - search\n  t - force sidebar\n  p - swap prod and test\n  z - surprise me\n  a - all posts\n  m - global toc\n  6 - family journal\n  `;\n  mouseTrap.bind(\"?\", e => alert(shortcutHelp));\n}\n\n// Export and share with others.\n// https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\nfunction shuffle(list) {\n  return list\n    .map(value => ({ value, sort: Math.random() }))\n    .sort((a, b) => a.sort - b.sort)\n    .map(({ value }) => value);\n}\nfunction random_from_list(list) {\n  return shuffle(list)[0];\n}\n\n// This div gets content from the random_html_factory\n// and clicking does a re-randomize\nasync function append_randomizer_div(\n  parent_id: string | JQuery<HTMLElement>,\n  random_html_factory: () => string\n) {\n  // as string to queit type checker.\n  // Will be a noop if parent_id is already a jquery object\n  const $parent = $(parent_id as string);\n  if ($parent.length != 1) {\n    console.log(`append_randomizer_div ${parent_id} not present`);\n    return;\n  }\n  const new_element = $(await random_html_factory());\n  $parent.empty().append(new_element);\n\n  // Clicking on the element should result in a reload, unless you're\n  // Clicking on a link\n  $parent.click(async function(event) {\n    if (event.target.tagName != \"A\") {\n      const new_element = $(await random_html_factory());\n      $parent.empty().append(new_element);\n    }\n  });\n}\n\nfunction load_globals() {\n  $(add_link_loader);\n  $(JsTemplateReplace);\n  $(keyboard_shortcut_loader);\n  $(() => {\n    // TOC Generation should go to posts.\n    generateToc(\"ui-toc\", true);\n    generateToc(\"ui-toc-affix\", false);\n  });\n}\n\nexport {\n  load_globals,\n  get_link_info,\n  MakeBackLinkHTML,\n  shuffle,\n  random_from_list,\n  append_randomizer_div,\n};\n","//\n//  main.js\n//\n// Random tree\n// Tree copied from: https://github.com/vasturiano/force-graph\nconsole.log(\"Load force graph in TS\");\nimport { warn } from \"console\";\nimport { get_link_info } from \"./main\";\n\nconst m = get_link_info();\nconsole.log(await m);\n\n// import ForceGraph from \"force-graph\";\nconst N = 300;\nconst gDataExample = {\n  nodes: [...Array(N).keys()].map(i => ({ id: i })),\n  links: [...Array(N).keys()]\n    .filter(id => id)\n    .map(id => ({\n      source: id,\n      target: Math.round(Math.random() * (id - 1)),\n    })),\n};\n\n// Create gData from get_link_info\n\nconst gData = {\n  nodes: await get_link_info().map(e => {\n    id: e.url;\n  }),\n};\n\nconsole.log(\"HEllo From Typescript\");\n\nForceGraph()(document.getElementById(\"graph\"))\n  .linkDirectionalParticles(2)\n  .graphData(gData);\n\nconsole.log(\"Post Graph\");\n"],"names":[],"version":3,"file":"idv-blog-module.js.map"}